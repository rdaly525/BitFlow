
SIMPLE FIGURE 3:

tensor([12., 12., 12., 12., 12.])

##### TRAINING ######
tensor([12.0945, 10.0947, 13.3364, 15.3344, 13.0111], requires_grad=True)
tensor([12, 10, 14, 16, 13])

##### TEST SET ######
accuracy: 0.824999988079071

##### UFB TEST SET ######
accuracy: 0.8700000047683716

##### TRAIN SET ######
accuracy: 0.8445000052452087

##### UFB TRAIN SET ######
accuracy: 0.8980000019073486

##### MODEL DETAILS #####
ERROR: -9.924173355102539e-05
AREA: 264

##### FROM OPTIMIZER ######
SOLVING AREA/ERROR...
ERROR EQ: +2**(-8.0-1) - (+8*2**(-a-1)+3*2**(-b-1)+1*(+1*2**(-b-1))*(+1*2**(-a-1))+1*2**(-d-1)+1*2**(-c-1)+1*2**(-e-1)-1*2**(-b-1))
AREA EQ: 1 * (3 + a)*(5 + b)+max(6 + d, 4 + c)+max(6 + e, 5 + b)
-----------
a: 13
b: 11
d: 14
c: 16
e: 13
ERROR: 0.0008773654699325562
AREA: 295

##### OPTIMIZER TEST SET ######
accuracy: 0.9300000071525574

----------------------------------------------------
SIMPLE TWO OUPUT DAG:

tensor([11., 11., 11., 11., 11.])

##### TRAINING ######
tensor([ 8.8008,  9.8698, 11.9534, 10.9306, 10.9534], requires_grad=True)
tensor([ 9, 10, 12, 11, 11])

##### TEST SET ######
accuracy: 0.8025000095367432

##### UFB TEST SET ######
accuracy: 0.8399999737739563

##### TRAIN SET ######
accuracy: 0.8237500190734863

##### UFB TRAIN SET ######
accuracy: 0.8702499866485596

##### MODEL DETAILS #####
ERROR: 0.0020742416381835938
AREA: 398

##### FROM OPTIMIZER ######
SOLVING AREA/ERROR...
ERROR EQ: +2**(-5.0-1) - (+1*2**(-b-1)+8*2**(-c-1)+1*(+1*2**(-c-1))*(+1*2**(-b-1))+1*2**(-e-1)+8*2**(-a-1)+3*2**(-b-1)+1*(+1*2**(-b-1))*(+1*2**(-a-1))+1*2**(-d-1))+2**(-8.0-1) - (+1*2**(-a-1)+8*2**(-a-1)+3*2**(-b-1)+1*(+1*2**(-b-1))*(+1*2**(-a-1))+1*2**(-d-1))
AREA EQ: 1 * (5 + b)*(2 + c)+1 * (3 + a)*(5 + b)+max(5 + e, 6 + d)+max(3 + a, 6 + d)
-----------
b: 9
c: 10
e: 12
a: 11
d: 11
ERROR: 0.0020742416381835938
AREA: 398

##### OPTIMIZER TEST SET ######
accuracy: 0.8025000095367432
----------------------------------------------------

MATRIX MULTIPLICATION (YCbCr <-- RGB)

##### OPTIMIZER TEST SET ######
accuracy: 0.8025000095367432
.tensor([16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,
        16., 16., 16., 16., 16., 16., 16., 16., 16., 16.])

##### TRAINING ######
tensor([14.2588, 14.1403, 16.3828, 14.2588, 14.1403, 15.3828, 15.0823, 14.2588,
        14.1403, 16.9591, 14.2588, 16.3828, 14.2588, 15.3828, 15.7106, 14.2588,
        15.7106, 14.2588, 15.7106, 14.2588, 15.7106, 15.7106, 14.2588, 15.7106],
       requires_grad=True)
tensor([15, 14, 17, 15, 14, 16, 15, 15, 14, 17, 15, 17, 15, 16, 16, 15, 16, 15,
        16, 15, 16, 16, 15, 16])

##### TEST SET ######
accuracy: 0.8933333158493042

##### UFB TEST SET ######
accuracy: 0.9466666579246521

##### TRAIN SET ######
accuracy: 0.9023333191871643

##### UFB TRAIN SET ######
accuracy: 0.9614999890327454

##### MODEL DETAILS #####
ERROR: -2.670676663517953e-05
AREA: 2643

##### FROM OPTIMIZER ######
SOLVING AREA/ERROR...
ERROR EQ: +2**(-10.0-1) - (+10*2**(-C1-1)+0.299*2**(-r-1)+1*(+1*2**(-r-1))*(+1*2**(-C1-1))+1*2**(-C1_mul_r-1)+10*2**(-C2-1)+0.587*2**(-g-1)+1*(+1*2**(-g-1))*(+1*2**(-C2-1))+1*2**(-C2_mul_g-1)+1*2**(-C1_mul_r_add_C2_mul_g-1)+10*2**(-C3-1)+0.114*2**(-b-1)+1*(+1*2**(-b-1))*(+1*2**(-C3-1))+1*2**(-C3_mul_b-1))+2**(-10.0-1) - (+10*2**(-C4-1)-0.16875*2**(-r-1)+1*(+1*2**(-r-1))*(+1*2**(-C4-1))+1*2**(-C4_mul_r-1)+10*2**(-C5-1)-0.33126*2**(-g-1)+1*(+1*2**(-g-1))*(+1*2**(-C5-1))+1*2**(-C5_mul_g-1)+1*2**(-C4_mul_r_add_C5_mul_g-1)+10*2**(-C6-1)+0.5*2**(-b-1)+1*(+1*2**(-b-1))*(+1*2**(-C6-1))+1*2**(-C6_mul_b-1))+2**(-10.0-1) - (+10*2**(-C7-1)+0.5*2**(-r-1)+1*(+1*2**(-r-1))*(+1*2**(-C7-1))+1*2**(-C7_mul_r-1)+10*2**(-C8-1)-0.41869*2**(-g-1)+1*(+1*2**(-g-1))*(+1*2**(-C8-1))+1*2**(-C8_mul_g-1)+1*2**(-C7_mul_r_add_C8_mul_g-1)+10*2**(-C9-1)-0.08131*2**(-b-1)+1*(+1*2**(-b-1))*(+1*2**(-C9-1))+1*2**(-C9_mul_b-1))
AREA EQ: 1 * (0 + C1)*(5 + r)+1 * (1 + C2)*(5 + g)+max(3 + C1_mul_r, 4 + C2_mul_g)+1 * (-2 + C3)*(5 + b)+max(5 + C1_mul_r_add_C2_mul_g, 2 + C3_mul_b)+1 * (-1 + C4)*(5 + r)+1 * (0 + C5)*(5 + g)+max(2 + C4_mul_r, 3 + C5_mul_g)+1 * (1 + C6)*(5 + b)+max(4 + C4_mul_r_add_C5_mul_g, 4 + C6_mul_b)+1 * (1 + C7)*(5 + r)+1 * (0 + C8)*(5 + g)+max(4 + C7_mul_r, 4 + C8_mul_g)+1 * (-2 + C9)*(5 + b)+max(1 + C7_mul_r_add_C8_mul_g, 1 + C9_mul_b)
-----------
C1: 10
r: 5
C1_mul_r: 12
C2: 11
g: 1
C2_mul_g: 11
C1_mul_r_add_C2_mul_g: 10
C3: 10
b: 4
C3_mul_b: 13
C4: 10
C4_mul_r: 12
C5: 11
C5_mul_g: 11
C4_mul_r_add_C5_mul_g: 11
C6: 10
C6_mul_b: 11
C7: 10
C7_mul_r: 11
C8: 11
C8_mul_g: 11
C7_mul_r_add_C8_mul_g: 11
C9: 10
C9_mul_b: 11
ERROR: -0.02391132080078122
AREA: 833

##### OPTIMIZER TEST SET ######
accuracy: 0.004999999888241291
[tensor([2.6035]), tensor([-3.1621]), tensor([-0.4307])]